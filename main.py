import random

# Цифры (Обучающая выборка)
nums = ['111101101101111', '001001001001001', '111001111100111', '111001111001111', '101101111001001',
        '111100111001111', '111100111101111', '111001001001001', '111101111101111', '111101111001111']

# Виды цифры 5 (Тестовая выборка)
nums5 = ['111100111000111', '111100010001111', '111100011001111',
         '110100111001111', '110100111001011', '111100101001111']

# Инициализация весов сети
weights = [0 for i in range(15)]
# Порог функции активации
bias = 4.5


# Является ли данное число 5
def proceed(number):
    # Рассчитываем взвешенную сумму
    net = 0
    for i in range(15):
        net += int(number[i]) * weights[i]

    # Превышен ли порог? (Да - сеть думает, что это 5. Нет - сеть думает, что это другая цифра)
    return net >= bias


# Уменьшение значений весов, если сеть ошиблась и выдала 1
def decrease(number):
    for i in range(15):
        # Возбужденный ли вход
        if int(number[i]) == 1:
            # Уменьшаем связанный с ним вес на единицу
            weights[i] -= 0.5


# Увеличение значений весов, если сеть ошиблась и выдала 0
def increase(number):
    for i in range(15):
        # Возбужденный ли вход
        if int(number[i]) == 1:
            # Увеличиваем связанный с ним вес на единицу
            weights[i] += 0.5


# Тренировка сети
for i in range(10000):
    # Генерируем случайное число от 0 до 9
    option = random.randint(0, 9)

    # Если получилось НЕ число 5
    if option != 5:
        # Если сеть выдала True/Да/1, то наказываем ее
        if proceed(nums[option]):
            decrease(nums[option])
    # Если получилось число 5
    else:
        # Если сеть выдала False/Нет/0, то показываем, что эта цифра - то, что нам нужно
        if not proceed(nums[option]):
            increase(nums[option])

# Вывод значений весов
print(weights)

# Прогон по обучающей выборке
for i in range(10):
    print(f'{i} это 5? ', proceed(nums[i]))

print('\n')

# Прогон по тестовой выборке
for i in range(6):
    print(f'Узнал 5 - {i}? ', proceed(nums5[i]))
